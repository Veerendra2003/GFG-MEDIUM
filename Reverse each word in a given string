/*
Reverse each word in a given string
MediumAccuracy: 53.96%Submissions: 33K+Points: 4
Lamp
Don't Let the Fear of Missing Out Hold You Back from a Lucrative Career in Data Science. Try this course!

Given a String. Reverse each word in it where the words are separated by dots.

Example 1:

Input:
S = "i.like.this.program.very.much"
Output: 
i.ekil.siht.margorp.yrev.hcum
Explanation: 
The words are reversed as
follows:"i" -> "i","like"->"ekil",
"this"->"siht","program" -> "margorp",
"very" -> "yrev","much" -> "hcum".
Example 2:

Input: 
S = "pqr.mno"
Output: 
rqp.onm
Explanation: 
The words are reversed as
follows:"pqr" -> "rqp" ,
"mno" -> "onm"

Your Task:
You don't need to read input or print anything. Your task is to complete the functionreverseWords()which takes the string S as input and returns the resultant string by reversing all the words separated by dots.


Expected Time Complexity:O(|S|).
Expected Auxiliary Space:O(|S|).


Constraints:
1<=|S|<=105
*/
==========================================================================================================================================
SOLUTION IN JAVA:
====================
/{ Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;

class GFG
{
    public static void main(String args[])throws IOException
    {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while(t-- > 0)
        {
            String s;
            s = sc.next();
            
            Solution ob = new Solution();
            
            System.out.println(ob.reverseWords (s));    
        }
    }
}
// } Driver Code Ends


//User function Template for Java
class Solution
{
   
    String reverseWords(String S)
    {
        Stack<Character> s = new Stack<>();
        String ans = "";
        for(int i=0; i<S.length(); i++){
            if(S.charAt(i)=='.'){
                while(s.empty()==false){
                    ans = ans+s.pop();
                }
                ans = ans+".";
                continue;
            }
            s.push(S.charAt(i));
        }
        while(s.empty()==false){
         ans = ans+s.pop();
        }
        
        return ans;
    }
}
